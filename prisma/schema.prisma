generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model channels {
  id          BigInt     @id @default(autoincrement())
  inserted_at DateTime   @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  slug        String     @unique
  created_by  String     @db.Uuid
  users       users      @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  messages    messages[]
}

model messages {
  id          BigInt   @id @default(autoincrement())
  inserted_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  message     String?
  user_id     String   @db.Uuid
  channel_id  BigInt
  channels    channels @relation(fields: [channel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users       users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model role_permissions {
  id         BigInt         @id @default(autoincrement())
  role       app_role
  permission app_permission

  @@unique([role, permission])
}

model user_roles {
  id      BigInt   @id @default(autoincrement())
  user_id String   @db.Uuid
  role    app_role
  users   users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, role])
}

model users {
  id         String       @id @db.Uuid
  username   String?
  status     user_status? @default(OFFLINE)
  channels   channels[]
  messages   messages[]
  user_roles user_roles[]
}

enum app_permission {
  channels_delete @map("channels.delete")
  messages_delete @map("messages.delete")
}

enum app_role {
  admin
  moderator
}

enum user_status {
  ONLINE
  OFFLINE
}
