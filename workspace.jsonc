/**
 * this is the main configuration file of your bit workspace.
 * for full documentation, please see: https://harmony-docs.bit.dev/workspace/configurations
 **/{
  "$schema": "https://static.bit.dev/teambit/schemas/schema.json",
  /**
   * main configuration of the Bit workspace.
   **/
  "teambit.workspace/workspace": {
    /**
     * the name of the component workspace. used for development purposes.
     **/
    "name": "components",
    /**
     * set the icon to be shown on the Bit server.
     **/
    "icon": "https://static.bit.dev/bit-logo.svg",
    /**
     * default directory to place a component during `bit import` and `bit create`.
     * the following placeholders are available:
     * name - component name includes namespace, e.g. 'ui/button'.
     * scopeId - full scope-id includes the owner, e.g. 'teambit.compilation'.
     * scope - scope name only, e.g. 'compilation'.
     * owner - owner name in bit.dev, e.g. 'teambit'.
     **/
    "defaultDirectory": "{scope}/{name}",
    /**
     * default scope for all components in workspace.
     **/
    "defaultScope": "waweb.demo"
  },
  /**
   * main configuration for component dependency resolution.
   **/
  "teambit.dependencies/dependency-resolver": {
    /**
     * choose the package manager for Bit to use. you can choose between 'yarn', 'pnpm'
     */
    "packageManager": "teambit.dependencies/yarn",
    "policy": {
      "dependencies": {
        "@emotion/core": "-",
        "@emotion/css": "-",
        "@emotion/react": "-",
        "@emotion/server": "-",
        "@emotion/styled": "-",
        "@hcaptcha/react-hcaptcha": "-",
        "@mdx-js/mdx": "-",
        "@mdx-js/react": "-",
        "@mui/icons-material": "-",
        "@mui/material": "-",
        "@mui/types": "-",
        "@prisma/client": "-",
        "@reach/skip-nav": "-",
        "@react-aria/button": "-",
        "@react-aria/dialog": "-",
        "@react-aria/focus": "-",
        "@react-aria/overlays": "-",
        "@react-aria/ssr": "-",
        "@react-stately/overlays": "-",
        "@react-types/shared": "-",
        "@supabase/supabase-js": "-",
        "@waweb/tools.packages-excluder": "1.0.0",
        "apollo-server-core": "-",
        "apollo-server-express": "-",
        "apollo-server-micro": "-",
        "autoprefixer": "-",
        "core-js": "-",
        "graphql": "-",
        "graphql-scalars": "-",
        "graphql-tools": "-",
        "gray-matter": "-",
        "lodash": "-",
        "next": "-",
        "nprogress": "-",
        "postcss": "-",
        "react": "-",
        "react-aria": "-",
        "react-dom": "-",
        "react-helmet": "-",
        "reflect-metadata": "-",
        "regenerator-runtime": "-",
        "rxjs": "-",
        "smoothscroll-polyfill": "-",
        "swr": "-",
        "tailwindcss": "-",
        "tslib": "-"
      },
      "peerDependencies": {
        "@emotion/core": "^11.0.0",
        "@emotion/css": "^11.7.1",
        "@emotion/react": "^11.7.1",
        "@emotion/server": "^11.4.0",
        "@emotion/styled": "^11.6.0",
        "@hcaptcha/react-hcaptcha": "^1.1.0",
        "@mdx-js/mdx": "^1.6.22",
        "@mdx-js/react": "^1.6.22",
        "@mui/icons-material": "^5.3.1",
        "@mui/material": "^5.3.1",
        "@mui/types": "^7.1.0",
        "@prisma/client": "^3.8.1",
        "@reach/skip-nav": "^0.16.0",
        "@react-aria/button": "^3.3.4",
        "@react-aria/dialog": "^3.1.4",
        "@react-aria/focus": "^3.5.0",
        "@react-aria/overlays": "^3.7.3",
        "@react-aria/ssr": "^3.1.0",
        "@react-stately/overlays": "^3.1.3",
        "@react-types/shared": "^3.10.1",
        "@supabase/supabase-js": "^1.29.4",
        "apollo-server-core": "^3.6.2",
        "apollo-server-express": "^3.6.2",
        "apollo-server-micro": "^3.6.2",
        "autoprefixer": "^10.4.2",
        "core-js": "^3.20.3",
        "graphql": "^15.8.0",
        "graphql-scalars": "^1.14.1",
        "graphql-tools": "^8.2.0",
        "gray-matter": "^4.0.3",
        "lodash": "^4.17.21",
        "next": "^12.0.9",
        "nprogress": "^0.2.0",
        "postcss": "^8.4.5",
        "react": "^17.0.2",
        "react-aria": "^3.12.0",
        "react-dom": "^17.0.2",
        "react-helmet": "^6.1.0",
        "reflect-metadata": "^0.1.13",
        "regenerator-runtime": "^0.13.9",
        "rxjs": "^7.5.2",
        "smoothscroll-polyfill": "^0.4.4",
        "swr": "^1.2.0",
        "tailwindcss": "^3.0.18",
        "tslib": "^2.3.1"
      }
    }
  },
  /**
   * Add an aditional bundler for pure html
   */
  "teambit.compilation/bundler": {
    "dedicatedEnvDevServers": [
      "teambit.html/html"
    ]
  },
  /**
   * workspace variants allow to set different subsets of configuration for components in your
   * workspace. this is extremely useful for upgrading, aligning and building components with a new
   * set of dependencies. a rule can be a directory or a component-id/namespace, in which case,
   * wrap the rule with curly brackets (e.g. `"{ui/*}": {}`)
   * see https://harmony-docs.bit.dev/aspects/variants for more info.
   **/
  "teambit.workspace/variants": {
    "*": {
      "teambit.pkg/pkg": {
        "packageManagerPublishArgs": [
          "--access public"
        ],
        "packageJson": {
          "name": "@waweb/{scope}.{name}",
          "private": false,
          "author": {
            "name": "Aaron R Miller",
            "email": "amiller@watheia.org"
          },
          "repository": {
            "url": "https://bit.dev",
            "directory": "{scope}"
          },
          "homepage": "https://github.com/watheia/components",
          "keywords": [
            "micro",
            "microcomponent",
            "microfrontend",
            "bit",
            "harmony"
          ]
        },
        "license": "MIT"
      }
    },
    "libs/base-ui": {
      "defaultScope": "waweb.base-ui"
    },
    "libs/envs": {
      "defaultScope": "waweb.envs"
    },
    "libs/content": {
      "defaultScope": "waweb.content"
    },
    "libs/demo": {
      "defaultScope": "waweb.demo"
    },
    "libs/docs": {
      "defaultScope": "waweb.docs"
    },
    "libs/mdx": {
      "defaultScope": "waweb.mdx"
    },
    "libs/spectrum": {
      "defaultScope": "waweb.spectrum"
    },
    "libs/theme": {
      "defaultScope": "waweb.theme"
    },
    "libs/tools": {
      "defaultScope": "waweb.tools"
    },
    /**
     * configures all components with the appropritate build environment
     *
     */
    "libs/base-ui/theme, libs/docs/theme": {
      "teambit.react/react": {}
    },
    /**
     * configures components with namespaces 'entities', 'modules' and 'functions' to use the
     * default NodeJS dev environment.
     */
    "{elements/**}, {ui/**}, {text/*}": {
      "waweb.envs/wa-react": {},
      "teambit.react/react": "-"
    },
    /**
     * configures components with namespace 'content' to use the MDX dev environment.
     */
    "{content/**}": {
      "teambit.mdx/mdx": {}
    },
    /**
     * configures components with namespaces 'envs' and 'aspects' to use the default Aspect development environment.
     */
    "{wa-react}": {
      "teambit.harmony/aspect": {}
    },
    "libs/spectrum/design/typography": {
      // e.g. apply the env to all components under the some/path directory
      "teambit.html/html": {}
    }
    // "spectrum/theme": {
    //   "teambit.react/react": {}
    // }
  }
}